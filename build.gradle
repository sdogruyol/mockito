//apply from: 'release.gradle'
ant.importBuild 'build.xml'

task printHelp << {
    println """
---------------------------
How to build mockito?
---------------------------
1. Use gradle. To see available tasks run './gradlew tasks' (or if you're on Windows: 'gradlew tasks')
2. Alternatively, use ant. Run ant -p to see available tasks.
   -actually, gradle script imports the ant build so either way you build the results should be more like the same :)

---------------------------
How to release mockito?
---------------------------
1. [In progress] Use gradle. Run: 'gradlew test.release release.maven release'

---------------------------
More info.
---------------------------
We will move fully into gradle at some point. For now, ant import in gradle works for us just fine.
"""
}

task release << {

}

task replaceHeaders << {
    def files = fileTree('test') + fileTree('src')
    files = files.filter { !it.name.endsWith('.html') && !it.name.endsWith('.txt')}

    println "Found ${files.files.size()} files to verify license"

    def header = """/*
 * Copyright (c) 2007 Mockito contributors
 * This program is made available under the terms of the MIT License.
 */
"""
    files.each { File file ->
        def currentHdr = /(?sm).*?\/\*.*?\*\/.*?package org\./
        def ignoreHdr = /NON-STANDARD LICENCE HEADER HERE - THAT'S OK/

        def content = file.text

        if (content =~ ignoreHdr) {
          //this means we're ok with non-standard header
        } else if (!(content =~ currentHdr)) {
          println "header is missing for file: ${file} - replacing"
          file.text = header + content
        } else if (!content.find(currentHdr)?.contains(header)) {
          println "header is different for file: ${file} - replacing"
          content = content.replaceFirst(currentHdr, header + "package org.")
          file.text = content
        }
    }
}

defaultTasks 'printHelp'